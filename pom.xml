<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.jrocket</groupId>
    <artifactId>JRocket</artifactId>
    <packaging>war</packaging>
    <version>0.4.0</version>

    <name>JRocket</name>
    <url>http://jrocket.io</url>

    <!-- ****************** -->
    <!-- SOURCES MANAGEMENT -->
    <!-- ****************** -->

    <scm>
        <connection>scm:git:ssh://git@bitbucket.org/jrocket/jrocket.git</connection>
        <developerConnection>scm:git:ssh://git@bitbucket.org/jrocket/jrocket.git</developerConnection>
        <url>https://bitbucket.org/jrocket/jrocket</url>
    <tag>JRocket-0.4.0</tag>
  </scm>

    <!-- ********** -->
    <!-- PROPERTIES -->
    <!-- ********** -->

    <properties>
        <!-- Project properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>
        <downloadJavadocs>true</downloadJavadocs>
        <downloadSources>true</downloadSources>

        <!-- Dependencies version -->
        <junit.version>4.11</junit.version>
        <spring.version>3.2.4.RELEASE</spring.version>
        <servlet-api.version>3.1.0</servlet-api.version>
        <spring-data-jpa.version>1.3.4.RELEASE</spring-data-jpa.version>
        <hibernate.version>4.2.4.Final</hibernate.version>
        <hibernate-jpa.version>1.0.1.Final</hibernate-jpa.version>
        <slf4j-api.version>1.7.1</slf4j-api.version>
        <logback.version>1.0.13</logback.version>
        <guava.version>12.0</guava.version>
        <joda-time.version>2.3</joda-time.version>
        <jadira.version>3.0.0.GA</jadira.version>
        <jackson.version>2.3.0</jackson.version>
        <hsqldb-jdbc-driver.version>2.3.0</hsqldb-jdbc-driver.version>
        <assertj.version>1.3.0</assertj.version>
        <dbunit.version>2.4.9</dbunit.version>
        <spring-test-dbunit.version>1.0.1</spring-test-dbunit.version>
        <h2.version>1.3.173</h2.version>
        <mockito.version>1.9.5</mockito.version>
        <javax-mail.version>1.4.7</javax-mail.version>
        <velocity.version>1.7</velocity.version>
        <javamelody.version>1.46.0</javamelody.version>
        <itext.version>4.2.1</itext.version>
        <appstatus.version>0.4.5</appstatus.version>
        <metrics.version>3.0.1</metrics.version>
        <metrics-spring.version>3.0.0-RC4</metrics-spring.version>
        <httpclient.version>4.2.6</httpclient.version>
        <commons-beanutils.version>20030211.134440</commons-beanutils.version>
        <aspectj.version>1.7.3</aspectj.version>

        <!-- Plugins version -->
        <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.0</maven-compiler-plugin.version>
        <maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
        <maven-buildnumber-plugin.version>1.2</maven-buildnumber-plugin.version>
        <maven-war-plugin.version>2.4</maven-war-plugin.version>
        <maven-site-plugin.version>3.3</maven-site-plugin.version>
        <maven-cobertura-plugin.version>2.6</maven-cobertura-plugin.version>
        <maven-checkstyle-plugin.version>2.10</maven-checkstyle-plugin.version>
        <maven-pmd-plugin.version>3.0.1</maven-pmd-plugin.version>
        <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
        <maven-surefire-report-plugin.version>2.16</maven-surefire-report-plugin.version>
        <grunt-maven-plugin.version>1.2.0</grunt-maven-plugin.version>
        <maven-release-plugin.version>2.4.2</maven-release-plugin.version>
    </properties>

    <!-- ************ -->
    <!-- REPOSITORIES -->
    <!-- ************ -->

    <repositories>
        <!-- Add your repositories here -->
    </repositories>

    <!-- ************ -->
    <!-- DEPENDENCIES -->
    <!-- ************ -->

    <dependencies>

        <!-- ============ -->
        <!-- ARCHITECTURE -->
        <!-- ============ -->

        <!-- JSR-330 : DI & IOC standard API -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- JAVAX-SERVLET-API -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-api.version}</version>
        </dependency>

        <!-- SPRING : Java beans container & web support -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- ================ -->
        <!-- DATA PERSISTENCE -->
        <!-- ================ -->

        <!-- SPRING DATA - JPA : (awesome) repository services provider/generator -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring-data-jpa.version}</version>
        </dependency>

        <!-- SPRING : transaction management & ORM support -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- HIBERNATE : bundle of all necessary Hibernate modules (Core, Annotations,
          EntityManager) for JPA support ; see http://docs.jboss.org/hibernate/entitymanager/3.5/reference/en/html/configuration.html,
          ยง2.1. Setup -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- HIBERNATE : support for JPA -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>${hibernate-jpa.version}</version>
        </dependency>

        <!-- C3P0 : JDBC connection pooling & Hibernate support -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- ================= -->
        <!-- REST WEB SERVICES -->
        <!-- ================= -->

        <!-- SPRING-WEB-MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- JACKSON-MAPPER : used by Spring to convert Java POJOs to JSON strings. -->
        <!-- the core, which includes Streaming API, shared low-level abstractions (but
          NOT data-binding) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- Just the annotations; use this dependency if you want to attach annotations
          to classes without connecting them to the code. -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- databinding; ObjectMapper, JsonNode and related classes are here -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- ============ -->
        <!-- JDBC DRIVERS -->
        <!-- ============ -->

        <!-- HSQLDB -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb-jdbc-driver.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- ============ -->
        <!-- TOOLS / UTIL -->
        <!-- ============ -->

        <!-- SLF4J-API : Java logger interface -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <!-- LOGBACK : Java logger, substitute of Log4J (embeds SLF4J abstract wrapper) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- JODA-TIME : enhanced Date types -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>

        <!-- JADIRA : joda-time DateTime support for Hibernate -->
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>${jadira.version}</version>
        </dependency>

        <!-- GOOGLE-GUAVA : useful Java tools & utils -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- APACHE COMMONS-BEANUTILS : used for improved Java Reflection abilities -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>

        <!-- ASPECTJ : AOP support through Spring -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!-- ========== -->
        <!-- MONITORING -->
        <!-- ========== -->

        <!-- JAVAMELODY : tool for monitoring Java applications (based on servlet filtering) -->
        <!-- Url : http://[hostname]:[port]/[context]/monitoring -->
        <!-- Doc : https://code.google.com/p/javamelody/wiki/UserGuide -->
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>${javamelody.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- ITEXT : used by JavaMelody for PDF generation -->
        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>${itext.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- METRICS : library that gives measure on the behavior of some application components -->
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-servlets</artifactId>
            <version>${metrics.version}</version>
        </dependency>
        <!-- METRICS-SPRING : Spring support -->
        <dependency>
            <groupId>com.ryantenney.metrics</groupId>
            <artifactId>metrics-spring</artifactId>
            <version>${metrics-spring.version}</version>
        </dependency>

        <!-- APACHE HTTP-CLIENT : used for URL health-checking -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <!-- APACHE HTTP-FLUENT-HC : used for an easier usage of http-client -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <!-- ======================== -->
        <!-- PERFORMANCE OPTIMIZATION -->
        <!-- ======================== -->

        <!-- ======= -->
        <!-- TESTING -->
        <!-- ======= -->

        <!-- JUNIT : unit testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- SPRING : unit testing -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- ASSERTJ : fluent interface for writing assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- DBUNIT : database testing -->
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- SPRING-TEST-DBUNIT : Spring support for DBUnit -->
        <dependency>
            <groupId>com.github.springtestdbunit</groupId>
            <artifactId>spring-test-dbunit</artifactId>
            <version>${spring-test-dbunit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- H2 : lightweight in-memory database for testing -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- MOCKITO : mocking framework for testing -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- ======= -->
        <!-- MAILING -->
        <!-- ======= -->

        <!-- JAVAX MAIL -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${javax-mail.version}</version>
        </dependency>

        <!-- VELOCITY -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${velocity.version}</version>
        </dependency>

    </dependencies>

    <!-- ***** -->
    <!-- BUILD -->
    <!-- ***** -->

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>false</filtering>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <filtering>false</filtering>
                <directory>src/test/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>
            <!-- Plugin used to configure JDK version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- Maven Eclipse integration & especially Web Tool Platform (WTP) support -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-plugin.version}</version>
                <configuration>
                    <wtpapplicationxml>true</wtpapplicationxml>
                    <wtpversion>2.0</wtpversion>
                </configuration>
            </plugin>

            <!-- Plugin used to clean AngularJS generated "target" folder -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>target-grunt</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Plugin used to manage AngularJS part -->
            <plugin>
                <groupId>pl.allegro</groupId>
                <artifactId>grunt-maven-plugin</artifactId>
                <version>${grunt-maven-plugin.version}</version>
                <configuration>
                    <gruntOptions>
                        <gruntOption>-verbose</gruntOption>
                    </gruntOptions>
                    <filteredResources>
                        <filteredResource>maven-properties.json</filteredResource>
                    </filteredResources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>create-resources</goal>
                            <goal>npm</goal>
                            <goal>grunt</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- ========= -->
            <!-- PACKAGING -->
            <!-- ========= -->

            <!-- Plugin used because we do not need no more web.xml (cf. ApplicationInitializer) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- ========= -->
            <!-- REPORTING -->
            <!-- ========= -->

            <!-- Reporting quality plugins (such as PMD, Cobertura, Checkstyle) aggregator -->
            <!-- Usage : execute command 'mvn site' and see the summary page is /target/site/project-reports.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
                <configuration>
                    <reportPlugins>
                        <!-- Plugin used to evaluate code style -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>${maven-checkstyle-plugin.version}</version>
                            <configuration>
                                <configLocation>checkstyle.xml</configLocation>
                            </configuration>
                        </plugin>
                        <!-- Plugin used to evaluate code quality -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-pmd-plugin</artifactId>
                            <version>${maven-pmd-plugin.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-report-plugin</artifactId>
                            <version>${maven-surefire-report-plugin.version}</version>
                        </plugin>
                        <!-- Plugin used to evaluate code coverage -->
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>cobertura-maven-plugin</artifactId>
                            <version>${maven-cobertura-plugin.version}</version>
                            <configuration>
                                <formats>
                                    <format>html</format>
                                    <format>xml</format>
                                </formats>
                            </configuration>
                        </plugin>
                        <!-- Plugin used to generate Javadoc-->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>${maven-javadoc-plugin.version}</version>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>

            <!-- Plugin used to release -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
            </plugin>

        </plugins>
    </build>

</project>
